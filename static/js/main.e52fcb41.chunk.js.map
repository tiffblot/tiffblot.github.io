{"version":3,"sources":["components/Header.tsx","pages/AboutPage.js","components/Gallery.js","pages/DownloadsPage.js","pages/GraphicsPage.js","pages/HomePage.js","App.tsx","serviceWorker.js","index.tsx"],"names":["HeaderLink","href","to","children","className","target","rel","Header","useState","showLinks","setShowLinks","is","alt","src","onClick","AboutPage","fontWeight","marginBottom","maxWidth","color","Gallery","filter","download","images","setImages","columns","setColumns","window","innerWidth","screenWidth","setScreenWidth","gallery","value","setValue","useEffect","fetch","mode","headers","Authorization","then","res","json","useGallery","loadImages","useCallback","a","result","resultImages","data","map","img","link","description","replace","tags","match","tag","slice","indexOf","console","error","filteredImages","updateImages","addEventListener","length","col","key","_","i","marginLeft","split","title","DownloadsPage","GraphicsPage","HomePage","App","path","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"uXAOMA,EAAa,SAAC,GAQb,IAAD,IAPJC,YAOI,MAPG,GAOH,MANJC,UAMI,MANC,GAMD,EALJC,EAKI,EALJA,SAMA,OAAIF,EAEA,wBAAIG,UAAU,eACZ,uBAAGH,KAAMA,EAAMI,OAAO,SAASC,IAAI,uBAChCH,IAMP,wBAAIC,UAAU,eACZ,kBAAC,IAAD,CAAMF,GAAIA,GAAKC,KAKRI,EAAS,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACnBC,EADmB,KACRC,EADQ,KAG1B,OACE,kBAAC,IAAD,CAAKN,UAAU,6BACb,kBAAC,IAAD,CAAMA,UAAU,cAAcF,GAAG,KAC/B,kBAAC,IAAD,CAAKS,GAAG,MAAMC,IAAI,OAAOC,IAAI,wBAG/B,kBAAC,IAAD,CACET,UAAU,mBACVU,QAAS,kBAAMJ,GAAcD,MAE/B,kBAAC,IAAD,CACEL,UAAS,+BAA0BK,GAAa,QAChDE,GAAG,KACHG,QAAS,kBAAMJ,GAAa,KAE5B,wBAAIN,UAAU,4BACZ,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAYF,GAAG,KAAf,aACA,kBAAC,EAAD,CAAYA,GAAG,KAAf,YACA,kBAAC,EAAD,CAAYA,GAAG,KAAf,aACA,kBAAC,EAAD,CAAYA,GAAG,UAAf,SACA,kBAAC,EAAD,CAAYD,KAAK,mCAAjB,QACA,kBAAC,EAAD,CAAYA,KAAK,uCACf,kBAAC,IAAD,UCxDGc,EAAY,WACvB,OACE,kBAAC,IAAD,CAAKX,UAAU,YACb,kBAAC,IAAD,CAAKO,GAAG,KAAKK,WAAY,IAAKC,aAAa,KAA3C,iBAGA,kBAAC,IAAD,CAAKN,GAAG,IAAIO,SAAU,KAAtB,MACM,IACJ,kBAAC,IAAD,CAAKP,GAAG,IAAIQ,MAAM,yBAAlB,WAFF,mJAQA,oCACS,IACP,uBAAGlB,KAAK,kCAAR,8B,+BCKD,IAAMmB,EAAU,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAA+B,IAAvBC,gBAAuB,WAC3Bd,mBAAS,IADkB,mBAChDe,EADgD,KACxCC,EADwC,OAEzBhB,mBAAS,CAAC,EAAG,EAAG,IAFS,mBAEhDiB,EAFgD,KAEvCC,EAFuC,OAGjBlB,mBAASmB,OAAOC,YAHC,mBAGhDC,EAHgD,KAGnCC,EAHmC,KAKjDC,EAtBR,WAAuB,IAAD,EACMvB,mBAAS,MADf,mBACbwB,EADa,KACNC,EADM,KAcpB,OAXAC,qBAAU,WACRC,MAAM,wCAAyC,CAC7CC,KAAM,OACNC,QAAS,CACPC,cAAe,+BAGhBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASP,EAASO,QACzB,IAEIR,EAQSU,GACVC,EAAaC,sBAAW,sBAAC,8BAAAC,EAAA,kEAErBC,EAASf,EAFY,wDAIrBgB,EAAeD,EAAOE,KAAKzB,OAAO0B,KAAI,SAACC,GAAD,MAAU,CACpDrC,IAAKqC,EAAIC,KACTC,YACEF,EAAIE,aACJF,EAAIE,YAAYC,QAAQ,wBAAyB,IACnDC,KAAMJ,EAAIE,YACNF,EAAIE,YACDG,MAAM,yBACNN,KAAI,SAACO,GAAD,OAASA,EAAIC,MAAMD,EAAIE,QAAQ,KAAO,MAC7C,OAbqB,kBAepBX,GAfoB,gCAiB3BY,QAAQC,MAAR,MAjB2B,yDAmB5B,CAAC7B,IAgCJ,OApBAG,qBAAU,WAQHH,IAPa,uCAAG,8BAAAc,EAAA,sEACQF,IADR,OACbI,EADa,OAEbc,GACQ,OAAZd,QAAY,IAAZA,OAAA,EAAAA,EAAc1B,QAAO,SAAC6B,GAAD,OAASA,EAAII,KAAKI,QAAQrC,IAAW,OAAM,GAClEG,EAAUqC,GAJS,2CAAH,oDAQlBC,GAEAnC,OAAOoC,iBAAiB,UAAU,WAChCjC,EAAeH,OAAOC,kBAEvB,CAACG,IAEJG,qBAAU,WAzBJL,EAAc,IACO,IAAnBJ,EAAQuC,QAActC,EAAW,CAAC,IAC7BG,EAAc,IACA,IAAnBJ,EAAQuC,QAActC,EAAW,CAAC,EAAG,IAElB,IAAnBD,EAAQuC,QAActC,EAAW,CAAC,EAAG,EAAG,MAsB7C,CAACG,IAGF,oCACE,kBAAC,IAAD,CAAKzB,UAAU,8BACZqB,EAAQwB,KAAI,SAACgB,GACZ,OACE,kBAAC,IAAD,CAAKC,IAAK,MAAQD,GACf1C,EACEF,QAAO,SAAC8C,EAAGC,GAAJ,OAAUA,EAAI3C,EAAQuC,SAAWC,KACxChB,KAAI,SAACC,EAAKkB,GACT,OACE,kBAAC,IAAD,CAAKF,IAAKE,EAAGhE,UAAU,kBACrB,kBAAC,IAAD,CACEO,GAAG,MACHP,UAAU,gBACVS,IAAKqC,EAAIrC,IACTD,IAAKsC,EAAIE,cAEX,kBAAC,IAAD,CAAKhD,UAAU,uBACZ8C,EAAIE,YACJ9B,GACC,kBAAC,IAAD,CACEX,GAAG,IACH0D,WAAW,OACXpE,KAAMiD,EAAIrC,IACVS,SACE4B,EAAIE,YACAF,EAAIE,YAAYkB,MAAM,KAAK,GAAK,OAChC,eAENC,MAAOrB,EAAIE,aATb,0BCjGboB,EAAgB,WAC3B,OAAO,kBAAC,EAAD,CAASnD,OAAO,YAAYC,UAAQ,KCDhCmD,EAAe,WAC1B,OAAO,kBAAC,EAAD,CAASpD,OAAO,cCDZqD,EAAW,WACtB,OAAO,kBAAC,EAAD,CAASrD,OAAO,gBC2BVsD,MArBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,UCdUC,QACW,cAA7BlD,OAAOmD,SAASC,UAEe,UAA7BpD,OAAOmD,SAASC,UAEhBpD,OAAOmD,SAASC,SAASxB,MACvB,2DCVNyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhD,MAAK,SAAAiD,GACJA,EAAaC,gBAEdC,OAAM,SAAA9B,GACLD,QAAQC,MAAMA,EAAM+B,c","file":"static/js/main.e52fcb41.chunk.js","sourcesContent":["import \"./Header.css\";\n\nimport React, { useState } from \"react\";\nimport { Instagram, Menu, X } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"ui-box\";\n\nconst HeaderLink = ({\n  href = \"\",\n  to = \"\",\n  children,\n}: {\n  href?: string;\n  to?: string;\n  children: any;\n}) => {\n  if (href) {\n    return (\n      <li className=\"Header-link\">\n        <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n          {children}\n        </a>\n      </li>\n    );\n  }\n  return (\n    <li className=\"Header-link\">\n      <Link to={to}>{children}</Link>\n    </li>\n  );\n};\n\nexport const Header = () => {\n  const [showLinks, setShowLinks] = useState(false);\n\n  return (\n    <Box className=\"App-page Header-container\">\n      <Link className=\"Header-logo\" to=\"/\">\n        <Box is=\"img\" alt=\"Tiff\" src=\"tiff_logo_2022.png\" />\n      </Link>\n\n      <Menu\n        className=\"Header-hamburger\"\n        onClick={() => setShowLinks(!showLinks)}\n      />\n      <Box\n        className={`Header-linkContainer ${showLinks && \"show\"}`}\n        is=\"ul\"\n        onClick={() => setShowLinks(false)}\n      >\n        <li className=\"Header-link Header-close\">\n          <X />\n        </li>\n        <HeaderLink to=\"/\">portfolio</HeaderLink>\n        <HeaderLink to=\"/\">graphics</HeaderLink>\n        <HeaderLink to=\"/\">downloads</HeaderLink>\n        <HeaderLink to=\"/about\">about</HeaderLink>\n        <HeaderLink href=\"https://tiffblot.bigcartel.com/\">shop</HeaderLink>\n        <HeaderLink href=\"https://www.instagram.com/tiffblot/\">\n          <Instagram />\n        </HeaderLink>\n      </Box>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport Box from \"ui-box\";\n\nexport const AboutPage = () => {\n  return (\n    <Box className=\"App-page\">\n      <Box is=\"h2\" fontWeight={500} marginBottom=\"0\">\n        oh, hi there!\n      </Box>\n      <Box is=\"p\" maxWidth={500}>\n        i'm{\" \"}\n        <Box is=\"b\" color=\"var(--text-secondary)\">\n          tiffany\n        </Box>\n        , a watercolor artist & graphic designer. i like to illustrate nostalgic\n        art, from the little moments in life to your favorite childhood foods.\n      </Box>\n      <p>\n        email:{\" \"}\n        <a href=\"mailto:teashopbytiff@gmail.com\">teashopbytiff@gmail.com</a>\n      </p>\n    </Box>\n  );\n};\n","import \"./Gallery.css\";\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Box from \"ui-box\";\n\nconst CLIENT_ID = \"fad804cc7c9498e\";\n\nfunction useGallery() {\n  const [value, setValue] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://api.imgur.com/3/album/Y4cGbYY\", {\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Client-ID \" + CLIENT_ID,\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => setValue(res));\n  }, []);\n\n  return value;\n}\n\nexport const Gallery = ({ filter, download = false }) => {\n  const [images, setImages] = useState([]);\n  const [columns, setColumns] = useState([0, 1, 2]);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n\n  const gallery = useGallery();\n  const loadImages = useCallback(async () => {\n    try {\n      const result = gallery;\n      if (!result) return;\n      const resultImages = result.data.images.map((img) => ({\n        src: img.link,\n        description:\n          img.description &&\n          img.description.replace(/(?:^|\\W)#(\\w+)(?!\\w)/g, \"\"),\n        tags: img.description\n          ? img.description\n              .match(/(?:^|\\W)#(\\w+)(?!\\w)/g)\n              .map((tag) => tag.slice(tag.indexOf(\"#\") + 1))\n          : [],\n      }));\n      return resultImages;\n    } catch (e) {\n      console.error(e);\n    }\n  }, [gallery]);\n\n  const calculateColumns = () => {\n    if (screenWidth < 600) {\n      if (columns.length !== 1) setColumns([0]);\n    } else if (screenWidth < 900) {\n      if (columns.length !== 2) setColumns([0, 1]);\n    } else {\n      if (columns.length !== 3) setColumns([0, 1, 2]);\n    }\n  };\n\n  useEffect(() => {\n    const updateImages = async () => {\n      const resultImages = await loadImages();\n      const filteredImages =\n        resultImages?.filter((img) => img.tags.indexOf(filter) > -1) || [];\n      setImages(filteredImages);\n    };\n\n    if (!gallery) return;\n    updateImages();\n\n    window.addEventListener(\"resize\", () => {\n      setScreenWidth(window.innerWidth);\n    });\n  }, [gallery]);\n\n  useEffect(() => {\n    calculateColumns();\n  }, [screenWidth]);\n\n  return (\n    <>\n      <Box className=\"App-page Gallery-container\">\n        {columns.map((col) => {\n          return (\n            <Box key={\"col\" + col}>\n              {images\n                .filter((_, i) => i % columns.length === col)\n                .map((img, i) => {\n                  return (\n                    <Box key={i} className=\"Gallery-single\">\n                      <Box\n                        is=\"img\"\n                        className=\"Gallery-image\"\n                        src={img.src}\n                        alt={img.description}\n                      />\n                      <Box className=\"Gallery-description\">\n                        {img.description}\n                        {download && (\n                          <Box\n                            is=\"a\"\n                            marginLeft=\".4em\"\n                            href={img.src}\n                            download={\n                              img.description\n                                ? img.description.split(\" \")[0] + \".png\"\n                                : \"tiffblot.png\"\n                            }\n                            title={img.description}\n                          >\n                            [download]\n                          </Box>\n                        )}\n                      </Box>\n                    </Box>\n                  );\n                })}\n            </Box>\n          );\n        })}\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Gallery } from \"../components/Gallery\";\n\nexport const DownloadsPage = () => {\n  return <Gallery filter=\"downloads\" download />;\n};\n","import React from \"react\";\n\nimport { Gallery } from \"../components/Gallery\";\n\nexport const GraphicsPage = () => {\n  return <Gallery filter=\"graphics\" />;\n};\n","import React from \"react\";\n\nimport { Gallery } from \"../components/Gallery\";\n\nexport const HomePage = () => {\n  return <Gallery filter=\"watercolor\" />;\n};\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport { Header } from \"./components/Header\";\nimport { AboutPage } from \"./pages/AboutPage\";\nimport { DownloadsPage } from \"./pages/DownloadsPage\";\nimport { GraphicsPage } from \"./pages/GraphicsPage\";\nimport { HomePage } from \"./pages/HomePage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/about\">\n          <AboutPage />\n        </Route>\n        <Route path=\"/graphics\">\n          <GraphicsPage />\n        </Route>\n        <Route path=\"/downloads\">\n          <DownloadsPage />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}